language: generic

addons:
  apt:
    packages:
    - libunwind8
    - libunwind8-dev
    - gettext
    - libicu-dev
    - liblttng-ust-dev
    - libcurl4-openssl-dev
    - libssl-dev
    - uuid-dev
    - unzip
    - zlib1g
    - zlib1g-dev 
    - libpcre3-dev 
    - libxslt1-dev 
    - libxml2-dev 
    - libgd2-xpm-dev 
    - libgeoip-dev 
    - libsnappy1 
    - libsnappy-dev
  hosts:
  - kafka

env:
  - VERSION: 1.0.$TRAVIS_BUILD_NUMBER
os: linux
dist: trusty
sudo: required

language: csharp
solution: KafkaClient.sln
mono: none
dotnet: 2.0.0

services:
  - docker

before_install:
  - docker network create kafka-net
  - docker run -d --name zookeeper --restart always --network kafka-net --publish 2181:2181 zookeeper:3.4
  - docker run -d --name kafka --network kafka-net --publish 9092:9092 --env ZOOKEEPER_IP=zookeeper --env KAFKA_DELETE_TOPIC_ENABLE=true --env KAFKA_AUTO_CREATE_TOPICS_ENABLE=true --env KAFKA_ADVERTISED_HOST_NAME=kafka ches/kafka:0.10.2.1
  - docker ps
  #- dotnet test -c %CONFIGURATION% -f netcoreapp2.0 src\KafkaClient.Tests\KafkaClient.Tests.csproj --filter "(TestCategory=CI) & (TestCategory!=Flaky) & (TestCategory!=SSL)" --logger:trx;LogFileName=test-results.xml;format=AppVeyor

install:
  - dotnet restore -v Minimal

script:
  - dotnet build -c Release -f netstandard1.6 src/KafkaClient/KafkaClient.csproj --no-dependencies --no-incremental
  - dotnet test -c Release -f netcoreapp2.0 src/KafkaClient.Tests/KafkaClient.Tests.csproj --filter "((TestCategory=CI) | (TestCategory=Integration)) & (TestCategory!=Flaky) & (TestCategory!=SSL)"

after_success:
  - dotnet pack -c Release -f netcoreapp2.0 src/KafkaClient/KafkaClient.csproj -o artifacts 

